   if sk is not None:
            # skillgroup bindings
            #model.addConstrs(
            #    (xsg.sum(c, d, h, a, '*') == x[c, d, h, a] for c in cycle for d in day for a in away for h in home),
            #    "bullshit")
            #model.addConstrs(
            #    (xsg[c, d, h, a, s] == x[c, d, h, a] for c in cycle for d in day for a in away for h in home for s in sg if sk[h] == s), "xo")
            #model.addConstrs(
            #    (xsg[c, d, h, a, skillgr] == 0 for c in cycle for d in day for a in away for h in home for skillgr in sg
            #     if
            #     sk[h] != skillgr), "xo")

            ### if skill bounds aren't none, we know we have sg0 and sg1 to iterate over
            ### skill group 0

            #skill_group0 = [i for i, x in enumerate(sk) if x]
            #skill_group1 = [i for i, x in enumerate(sk) if not x]

            #v0 = model.addVars(cycle, day, away, vtype=GRB.BINARY, name="v0")
            #model.addConstrs(
            #    (v0[c, d, a] <= quicksum(x[c, d, a, h] for h in skill_group0) for c in cycle for d in day for a in away), "xv0")
            #model.addConstrs(
            #    (v0[c, d, a] * quicksum(x[c, d, a, h] for h in skill_group0) == quicksum(
            #        x[c, d, a, h] for h in skill_group0)
            #     for c in cycle for d in day for a in away), "xv0")
            '''
            for i in range(len(bounds0)):
                if bounds0[i, 0] > 0:
                    # this part covers count lowerbound
                    if constrList[i] == [(0,), (1,)]:
                        model.addConstrs((r.sum(c, '*') >= bounds0[i, 0] for c in cycle), "SG0 - LWR_constr-(0,), (1,)")
                    elif constrList[i] == [(0,), (2,)]:
                        model.addConstrs((u.sum(c, '*') >= bounds0[i, 0] for c in cycle), "LWR_constr-(0,), (2,)")
                    elif constrList[i] == [(0,), (3,)]:
                        model.addConstrs((quicksum(s[c, h] for h in skill_group0) >= bounds0[i, 0] for c in cycle),
                                         "LWR_constr-(0,), (3,)")
                    elif constrList[i] == [(0,), (1, 2)]:
                        model.addConstrs((v0.sum(c, '*', '*') >= bounds0[i, 0] for c in cycle),
                                         "LWR_constr-(0,), (1,2)")
                    elif constrList[i] == [(0,), (1, 3)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for h in skill_group0 for d in day) >= bounds0[i, 0] for c in cycle),
                            "LWR_constr-(0,), (1,3)")
                    elif constrList[i] == [(0,), (2, 3)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group0 for a in away) >= bounds0[i, 0] for c in cycle),
                            "LWR_constr-(0,), (2,3)")
                    elif constrList[i] == [(0,), (1, 2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for d in day for a in away for h in skill_group0) >= bounds0[i, 0]
                             for c in
                             cycle),
                            "LWR_constr-(0,), (1,2,3)")

                    elif constrList[i] == [(1,), (0,)]:
                        model.addConstrs((r.sum('*', d) >= bounds0[i, 0] for d in day), "LWR_constr-(1,), (0,)")
                    elif constrList[i] == [(1,), (2,)]:
                        model.addConstrs((v.sum(d, '*') >= bounds0[i, 0] for d in day), "LWR_constr-(1,), (2,)")
                    elif constrList[i] == [(1,), (3,)]:
                        model.addConstrs((quicksum(u[d, h] for h in skill_group0) >= bounds0[i, 0] for d in day),
                                         "LWR_constr-(1,), (3,)")
                    elif constrList[i] == [(1,), (0, 2)]:
                        model.addConstrs((v0.sum('*', d, '*') >= bounds0[i, 0] for d in day), "LWR_constr-(1,), (0,2)")
                    elif constrList[i] == [(1,), (0, 3)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for c in cycle for h in skill_group0) >= bounds0[i, 0] for d in day),
                            "LWR_constr-(1,), (0,3)")
                    elif constrList[i] == [(1,), (2, 3)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for a in away for h in skill_group0) >= bounds0[i, 0] for d in day),
                            "LWR_constr-(1,), (2,3)")
                    elif constrList[i] == [(1,), (0, 2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for c in cycle for a in away for h in skill_group0) >= bounds0[i, 0]
                             for d
                             in day),
                            "LWR_constr-(1,), (0,2,3)")

                    elif constrList[i] == [(2,), (0,)]:
                        model.addConstrs((t.sum('*', a) >= bounds0[i, 0] for a in away), "LWR_constr-(2,), (0,)")
                    elif constrList[i] == [(2,), (1,)]:
                        model.addConstrs((v.sum('*', a) >= bounds0[i, 0] for a in away), "LWR_constr-(2,), (1,)")
                    elif constrList[i] == [(2,), (3,)]:
                        model.addConstrs((quicksum(w[h, a] for h in skill_group0) >= bounds0[i, 0] for a in away),
                                         "LWR_constr--(2,), (3,)")
                    elif constrList[i] == [(2,), (0, 1)]:
                        model.addConstrs((o.sum('*', '*', a) >= bounds0[i, 0] for a in away), "LWR_constr--(2,), (0,1)")
                    elif constrList[i] == [(2,), (0, 3)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group0 for c in cycle) >= bounds0[i, 0] for a in away),
                            "LWR_constr--(2,), (0,3)")
                    elif constrList[i] == [(2,), (1, 3)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for d in day for h in skill_group0) >= bounds0[i, 0] for a in away),
                            "LWR_constr-(2,), (1,3)")
                    elif constrList[i] == [(2,), (0, 1, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for c in cycle for d in day for h in skill_group0) >= bounds0[i, 0]
                             for a in
                             away),
                            "LWR_constr-(2,), (0,1,3)")

                    elif constrList[i] == [(3,), (0,)]:
                        model.addConstrs((s.sum('*', a) >= bounds0[i, 0] for a in away), "LWR_constr-(3,), (0,)")
                    elif constrList[i] == [(3,), (1,)]:
                        model.addConstrs((u.sum('*', a) >= bounds0[i, 0] for a in away), "LWR_constr-(3,), (1,)")
                    elif constrList[i] == [(3,), (2,)]:
                        model.addConstrs((w.sum('*', a) >= bounds0[i, 0] for a in away), "LWR_constr-(3,), (2,)")
                    elif constrList[i] == [(3,), (0, 1)]:
                        model.addConstrs((n.sum('*', '*', a) >= bounds0[i, 0] for a in away), "LWR_constr-(3,), (0,1)")
                    elif constrList[i] == [(3,), (0, 2)]:
                        model.addConstrs((p.sum('*', '*', a) >= bounds0[i, 0] for a in away), "LWR_constr-(3,), (0,2)")
                    elif constrList[i] == [(3,), (1, 2)]:
                        model.addConstrs((q.sum('*', '*', a) >= bounds0[i, 0] for a in away), "LWR_constr-(3,), (1,2)")
                    elif constrList[i] == [(3,), (0, 1, 2)]:
                        model.addConstrs((x.sum('*', '*', '*', a) >= bounds0[i, 0] for a in away),
                                         "LWR_constr-(3,), (0,1,2)")

                    elif constrList[i] == [(0, 1), (2,)]:
                        model.addConstrs((v0.sum(c, d, '*') >= bounds0[i, 0] for c in cycle for d in day),
                                         "LWR_constr-(0,1), (2,)")
                    elif constrList[i] == [(0, 1), (3,)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for h in skill_group0) >= bounds0[i, 0] for c in cycle for d in day),
                            "LWR_constr-(0,1), (3,)")
                    elif constrList[i] == [(0, 1), (2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group0 for a in away) >= bounds0[i, 0] for c in cycle
                             for d
                             in day),
                            "LWR_constr-(0,1), (2,3)")

                    elif constrList[i] == [(0, 2), (1,)]:
                        model.addConstrs((v0.sum(c, '*', a) >= bounds0[i, 0] for c in cycle for a in away),
                                         "LWR_constr-(0,2), (1,)")
                    elif constrList[i] == [(0, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group0) >= bounds0[i, 0] for c in cycle for a in away),
                            "LWR_constr-(0,2), (3,)")
                    elif constrList[i] == [(0, 2), (1, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group0 for d in day) >= bounds0[i, 0] for c in cycle
                             for a in
                             away),
                            "LWR_constr-(0,2), (1,3)")

                    elif constrList[i] == [(0, 3), (1,)]:
                        model.addConstrs((n.sum(c, '*', h) >= bounds0[i, 0] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (1,)")
                    elif constrList[i] == [(0, 3), (2,)]:
                        model.addConstrs((p.sum(c, h, '*') >= bounds0[i, 0] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (2,)")
                    elif constrList[i] == [(0, 3), (1, 2)]:
                        model.addConstrs((x.sum(c, '*', h, '*') >= bounds0[i, 0] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (1,2)")

                    elif constrList[i] == [(1, 2), (0,)]:
                        model.addConstrs((v0.sum('*', d, a) >= bounds0[i, 0] for d in day for a in away),
                                         "LWR_constr-(1,2), (0,)")
                    elif constrList[i] == [(1, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for h in skill_group0) >= bounds0[i, 0] for d in day for a in away),
                            "LWR_constr-(1,2), (3,)")
                    elif constrList[i] == [(1, 2), (0, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group0 for c in cycle) >= bounds0[i, 0] for d in day
                             for a in
                             away),
                            "LWR_constr-(1,2), (0,3)")

                    elif constrList[i] == [(1, 3), (0,)]:
                        model.addConstrs((n.sum('*', d, h) >= bounds0[i, 0] for d in day for h in home),
                                         "LWR_constr-(1,3), (0,)")
                    elif constrList[i] == [(1, 3), (2,)]:
                        model.addConstrs((q.sum(d, '*', h) >= bounds0[i, 0] for d in day for h in home),
                                         "LWR_constr-(1,3), (2,)")
                    elif constrList[i] == [(1, 3), (0, 2)]:
                        model.addConstrs((x.sum('*', d, '*', h) >= bounds0[i, 0] for d in day for h in home),
                                         "LWR_constr-(1,3), (0,2)")

                    elif constrList[i] == [(2, 3), (0,)]:
                        model.addConstrs((p.sum('*', h, a) >= bounds0[i, 0] for h in home for a in away),
                                         "LWR_constr-(2,3), (0,)")
                    elif constrList[i] == [(2, 3), (1,)]:
                        model.addConstrs((q.sum('*', h, a) >= bounds0[i, 0] for h in home for a in away),
                                         "LWR_constr-(2,3), (1,)")
                    elif constrList[i] == [(2, 3), (0, 1)]:
                        model.addConstrs((x.sum('*', '*', h, a) >= bounds0[i, 0] for h in home for a in away),
                                         "LWR_constr-(2,3), (0,1)")

                    elif constrList[i] == [(0, 1, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(x[c, d, a, h] for h in skill_group0) >= bounds0[i, 0] for c in cycle for d in day
                             for a in
                             away),
                            "LWR_constr-(0,1,2), (3,)")
                    elif constrList[i] == [(0, 1, 3), (2,)]:
                        model.addConstrs(
                            (x.sum(c, d, '*', h) >= bounds0[i, 0] for c in cycle for d in day for h in home),
                            "LWR_constr-(0,1,3), (2,)")
                    elif constrList[i] == [(0, 2, 3), (1,)]:
                        model.addConstrs(
                            (x.sum(c, '*', a, h) >= bounds0[i, 0] for c in cycle for a in away for h in home),
                            "LWR_constr-(0,2,3), (1,)")
                    elif constrList[i] == [(1, 2, 3), (0,)]:
                        model.addConstrs(
                            (x.sum('*', d, a, h) >= bounds0[i, 0] for d in day for a in away for h in home),
                            "LWR_constr-(1,2,3), (0,)")
                if bounds0[i, 1] > 0:
                    # this part covers count lowerbound
                    if constrList[i] == [(0,), (1,)]:
                        model.addConstrs((r.sum(c, '*') <= bounds0[i, 1] for c in cycle), "SG0 - LWR_constr-(0,), (1,)")
                    elif constrList[i] == [(0,), (2,)]:
                        model.addConstrs((u.sum(c, '*') <= bounds0[i, 0] for c in cycle), "LWR_constr-(0,), (2,)")
                    elif constrList[i] == [(0,), (3,)]:
                        model.addConstrs((quicksum(s[c, h] for h in skill_group0) <= bounds0[i, 1] for c in cycle),
                                         "LWR_constr-(0,), (3,)")
                    elif constrList[i] == [(0,), (1, 2)]:
                        model.addConstrs((v0.sum(c, '*', '*') <= bounds0[i, 1] for c in cycle),
                                         "LWR_constr-(0,), (1,2)")
                    elif constrList[i] == [(0,), (1, 3)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for h in skill_group0 for d in day) <= bounds0[i, 1] for c in cycle),
                            "LWR_constr-(0,), (1,3)")
                    elif constrList[i] == [(0,), (2, 3)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group0 for a in away) <= bounds0[i, 1] for c in cycle),
                            "LWR_constr-(0,), (2,3)")
                    elif constrList[i] == [(0,), (1, 2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for d in day for a in away for h in skill_group0) <= bounds0[i, 1]
                             for c in cycle),
                            "LWR_constr-(0,), (1,2,3)")
                    elif constrList[i] == [(1,), (0,)]:
                        model.addConstrs((r.sum('*', d) <= bounds0[i, 1] for d in day), "LWR_constr-(1,), (0,)")
                    elif constrList[i] == [(1,), (2,)]:
                        model.addConstrs((v.sum(d, '*') <= bounds0[i, 1] for d in day), "LWR_constr-(1,), (2,)")
                    elif constrList[i] == [(1,), (3,)]:
                        model.addConstrs((quicksum(u[d, h] for h in skill_group0) <= bounds0[i, 1] for d in day),
                                         "LWR_constr-(1,), (3,)")
                    elif constrList[i] == [(1,), (0, 2)]:
                        model.addConstrs((v0.sum('*', d, '*') <= bounds0[i, 1] for d in day), "LWR_constr-(1,), (0,2)")
                    elif constrList[i] == [(1,), (0, 3)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for c in cycle for h in skill_group0) <= bounds0[i, 1] for d in day),
                            "LWR_constr-(1,), (0,3)")
                    elif constrList[i] == [(1,), (2, 3)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for a in away for h in skill_group0) <= bounds0[i, 1] for d in day),
                            "LWR_constr-(1,), (2,3)")
                    elif constrList[i] == [(1,), (0, 2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for c in cycle for a in away for h in skill_group0) <= bounds0[i, 1]
                             for d in day),
                            "LWR_constr-(1,), (0,2,3)")
                    elif constrList[i] == [(2,), (0,)]:
                        model.addConstrs((t.sum('*', a) <= bounds0[i, 1] for a in away), "LWR_constr-(2,), (0,)")
                    elif constrList[i] == [(2,), (1,)]:
                        model.addConstrs((v.sum('*', a) <= bounds0[i, 1] for a in away), "LWR_constr-(2,), (1,)")
                    elif constrList[i] == [(2,), (3,)]:
                        model.addConstrs((quicksum(w[h, a] for h in skill_group0) <= bounds0[i, 1] for a in away),
                                         "LWR_constr--(2,), (3,)")
                    elif constrList[i] == [(2,), (0, 1)]:
                        model.addConstrs((o.sum('*', '*', a) <= bounds0[i, 1] for a in away), "LWR_constr--(2,), (0,1)")
                    elif constrList[i] == [(2,), (0, 3)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group0 for c in cycle) <= bounds0[i, 1] for a in away),
                            "LWR_constr--(2,), (0,3)")
                    elif constrList[i] == [(2,), (1, 3)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for d in day for h in skill_group0) <= bounds0[i, 1] for a in away),
                            "LWR_constr-(2,), (1,3)")
                    elif constrList[i] == [(2,), (0, 1, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for c in cycle for d in day for h in skill_group0) <= bounds0[i, 1]
                             for a in away),
                            "LWR_constr-(2,), (0,1,3)")
                    elif constrList[i] == [(3,), (0,)]:
                        model.addConstrs((s.sum('*', a) <= bounds0[i, 1] for a in away), "LWR_constr-(3,), (0,)")
                    elif constrList[i] == [(3,), (1,)]:
                        model.addConstrs((u.sum('*', a) <= bounds0[i, 1] for a in away), "LWR_constr-(3,), (1,)")
                    elif constrList[i] == [(3,), (2,)]:
                        model.addConstrs((w.sum('*', a) <= bounds0[i, 1] for a in away), "LWR_constr-(3,), (2,)")
                    elif constrList[i] == [(3,), (0, 1)]:
                        model.addConstrs((n.sum('*', '*', a) <= bounds0[i, 1] for a in away), "LWR_constr-(3,), (0,1)")
                    elif constrList[i] == [(3,), (0, 2)]:
                        model.addConstrs((p.sum('*', '*', a) <= bounds0[i, 1] for a in away), "LWR_constr-(3,), (0,2)")
                    elif constrList[i] == [(3,), (1, 2)]:
                        model.addConstrs((q.sum('*', '*', a) <= bounds0[i, 1] for a in away), "LWR_constr-(3,), (1,2)")
                    elif constrList[i] == [(3,), (0, 1, 2)]:
                        model.addConstrs((x.sum('*', '*', '*', a) <= bounds0[i, 1] for a in away),
                                         "LWR_constr-(3,), (0,1,2)")
                    elif constrList[i] == [(0, 1), (2,)]:
                        model.addConstrs((v0.sum(c, d, '*') <= bounds0[i, 1] for c in cycle for d in day),
                                         "LWR_constr-(0,1), (2,)")
                    elif constrList[i] == [(0, 1), (3,)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for h in skill_group0) <= bounds0[i, 1] for c in cycle for d in day),
                            "LWR_constr-(0,1), (3,)")
                    elif constrList[i] == [(0, 1), (2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group0 for a in away) <= bounds0[i, 1] for c in cycle
                             for d in day),
                            "LWR_constr-(0,1), (2,3)")
                    elif constrList[i] == [(0, 2), (1,)]:
                        model.addConstrs((v0.sum(c, '*', a) <= bounds0[i, 1] for c in cycle for a in away),
                                         "LWR_constr-(0,2), (1,)")
                    elif constrList[i] == [(0, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group0) <= bounds0[i, 1] for c in cycle for a in away),
                            "LWR_constr-(0,2), (3,)")
                    elif constrList[i] == [(0, 2), (1, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group0 for d in day) <= bounds0[i, 1] for c in cycle
                             for a in away),
                            "LWR_constr-(0,2), (1,3)")
                    elif constrList[i] == [(0, 3), (1,)]:
                        model.addConstrs((n.sum(c, '*', h) <= bounds0[i, 1] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (1,)")
                    elif constrList[i] == [(0, 3), (2,)]:
                        model.addConstrs((p.sum(c, h, '*') <= bounds0[i, 1] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (2,)")
                    elif constrList[i] == [(0, 3), (1, 2)]:
                        model.addConstrs((x.sum(c, '*', h, '*') <= bounds0[i, 1] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (1,2)")
                    elif constrList[i] == [(1, 2), (0,)]:
                        model.addConstrs((v0.sum('*', d, a) <= bounds0[i, 1] for d in day for a in away),
                                         "LWR_constr-(1,2), (0,)")
                    elif constrList[i] == [(1, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for h in skill_group0) <= bounds0[i, 1] for d in day for a in away),
                            "LWR_constr-(1,2), (3,)")
                    elif constrList[i] == [(1, 2), (0, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group0 for c in cycle) <= bounds0[i, 1] for d in day
                             for a in away),
                            "LWR_constr-(1,2), (0,3)")
                    elif constrList[i] == [(1, 3), (0,)]:
                        model.addConstrs((n.sum('*', d, h) <= bounds0[i, 1] for d in day for h in home),
                                         "LWR_constr-(1,3), (0,)")
                    elif constrList[i] == [(1, 3), (2,)]:
                        model.addConstrs((q.sum(d, '*', h) <= bounds0[i, 1] for d in day for h in home),
                                         "LWR_constr-(1,3), (2,)")
                    elif constrList[i] == [(1, 3), (0, 2)]:
                        model.addConstrs((x.sum('*', d, '*', h) <= bounds0[i, 1] for d in day for h in home),
                                         "LWR_constr-(1,3), (0,2)")
                    elif constrList[i] == [(2, 3), (0,)]:
                        model.addConstrs((p.sum('*', h, a) <= bounds0[i, 1] for h in home for a in away),
                                         "LWR_constr-(2,3), (0,)")
                    elif constrList[i] == [(2, 3), (1,)]:
                        model.addConstrs((q.sum('*', h, a) <= bounds0[i, 1] for h in home for a in away),
                                         "LWR_constr-(2,3), (1,)")
                    elif constrList[i] == [(2, 3), (0, 1)]:
                        model.addConstrs((x.sum('*', '*', h, a) <= bounds0[i, 1] for h in home for a in away),
                                         "LWR_constr-(2,3), (0,1)")
                    elif constrList[i] == [(0, 1, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(x[c, d, a, h] for h in skill_group0) <= bounds0[i, 1] for c in cycle for d in day
                             for a in away),
                            "LWR_constr-(0,1,2), (3,)")
                    elif constrList[i] == [(0, 1, 3), (2,)]:
                        model.addConstrs(
                            (x.sum(c, d, '*', h) <= bounds0[i, 1] for c in cycle for d in day for h in home),
                            "LWR_constr-(0,1,3), (2,)")
                    elif constrList[i] == [(0, 2, 3), (1,)]:
                        model.addConstrs(
                            (x.sum(c, '*', a, h) <= bounds0[i, 1] for c in cycle for a in away for h in home),
                            "LWR_constr-(0,2,3), (1,)")
                    elif constrList[i] == [(1, 2, 3), (0,)]:
                        model.addConstrs(
                            (x.sum('*', d, a, h) <= bounds0[i, 1] for d in day for a in away for h in home),
                            "LWR_constr-(1,2,3), (0,)")

            for i in range(len(bounds1)):
                if bounds1[i, 0] > 0:
                    # this part covers count lowerbound
                    if constrList[i] == [(0,), (1,)]:
                        model.addConstrs((r.sum(c, '*') >= bounds1[i, 0] for c in cycle), "SG0 - LWR_constr-(0,), (1,)")
                    elif constrList[i] == [(0,), (2,)]:
                        model.addConstrs((u.sum(c, '*') >= bounds1[i, 0] for c in cycle), "LWR_constr-(0,), (2,)")
                    elif constrList[i] == [(0,), (3,)]:
                        model.addConstrs((quicksum(s[c, h] for h in skill_group1) >= bounds1[i, 0] for c in cycle),
                                         "LWR_constr-(0,), (3,)")
                    elif constrList[i] == [(0,), (1, 2)]:
                        model.addConstrs((v0.sum(c, '*', '*') >= bounds1[i, 0] for c in cycle),
                                         "LWR_constr-(0,), (1,2)")
                    elif constrList[i] == [(0,), (1, 3)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for h in skill_group1 for d in day) >= bounds1[i, 0] for c in cycle),
                            "LWR_constr-(0,), (1,3)")
                    elif constrList[i] == [(0,), (2, 3)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group1 for a in away) >= bounds1[i, 0] for c in cycle),
                            "LWR_constr-(0,), (2,3)")
                    elif constrList[i] == [(0,), (1, 2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for d in day for a in away for h in skill_group1) >= bounds1[i, 0]
                             for c in
                             cycle),
                            "LWR_constr-(0,), (1,2,3)")
                    elif constrList[i] == [(1,), (0,)]:
                        model.addConstrs((r.sum('*', d) >= bounds1[i, 0] for d in day), "LWR_constr-(1,), (0,)")
                    elif constrList[i] == [(1,), (2,)]:
                        model.addConstrs((v.sum(d, '*') >= bounds1[i, 0] for d in day), "LWR_constr-(1,), (2,)")
                    elif constrList[i] == [(1,), (3,)]:
                        model.addConstrs((quicksum(u[d, h] for h in skill_group1) >= bounds1[i, 0] for d in day),
                                         "LWR_constr-(1,), (3,)")
                    elif constrList[i] == [(1,), (0, 2)]:
                        model.addConstrs((v0.sum('*', d, '*') >= bounds1[i, 0] for d in day), "LWR_constr-(1,), (0,2)")
                    elif constrList[i] == [(1,), (0, 3)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for c in cycle for h in skill_group1) >= bounds1[i, 0] for d in day),
                            "LWR_constr-(1,), (0,3)")
                    elif constrList[i] == [(1,), (2, 3)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for a in away for h in skill_group1) >= bounds1[i, 0] for d in day),
                            "LWR_constr-(1,), (2,3)")
                    elif constrList[i] == [(1,), (0, 2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for c in cycle for a in away for h in skill_group1) >= bounds1[i, 0]
                             for d
                             in day),
                            "LWR_constr-(1,), (0,2,3)")
                    elif constrList[i] == [(2,), (0,)]:
                        model.addConstrs((t.sum('*', a) >= bounds1[i, 0] for a in away), "LWR_constr-(2,), (0,)")
                    elif constrList[i] == [(2,), (1,)]:
                        model.addConstrs((v.sum('*', a) >= bounds1[i, 0] for a in away), "LWR_constr-(2,), (1,)")
                    elif constrList[i] == [(2,), (3,)]:
                        model.addConstrs((quicksum(w[h, a] for h in skill_group1) >= bounds1[i, 0] for a in away),
                                         "LWR_constr--(2,), (3,)")
                    elif constrList[i] == [(2,), (0, 1)]:
                        model.addConstrs((o.sum('*', '*', a) >= bounds1[i, 0] for a in away), "LWR_constr--(2,), (0,1)")
                    elif constrList[i] == [(2,), (0, 3)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group1 for c in cycle) >= bounds1[i, 0] for a in away),
                            "LWR_constr--(2,), (0,3)")
                    elif constrList[i] == [(2,), (1, 3)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for d in day for h in skill_group1) >= bounds1[i, 0] for a in away),
                            "LWR_constr-(2,), (1,3)")
                    elif constrList[i] == [(2,), (0, 1, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for c in cycle for d in day for h in skill_group1) >= bounds1[i, 0]
                             for a in
                             away),
                            "LWR_constr-(2,), (0,1,3)")
                    elif constrList[i] == [(3,), (0,)]:
                        model.addConstrs((s.sum('*', a) >= bounds1[i, 0] for a in away), "LWR_constr-(3,), (0,)")
                    elif constrList[i] == [(3,), (1,)]:
                        model.addConstrs((u.sum('*', a) >= bounds1[i, 0] for a in away), "LWR_constr-(3,), (1,)")
                    elif constrList[i] == [(3,), (2,)]:
                        model.addConstrs((w.sum('*', a) >= bounds1[i, 0] for a in away), "LWR_constr-(3,), (2,)")
                    elif constrList[i] == [(3,), (0, 1)]:
                        model.addConstrs((n.sum('*', '*', a) >= bounds1[i, 0] for a in away), "LWR_constr-(3,), (0,1)")
                    elif constrList[i] == [(3,), (0, 2)]:
                        model.addConstrs((p.sum('*', '*', a) >= bounds1[i, 0] for a in away), "LWR_constr-(3,), (0,2)")
                    elif constrList[i] == [(3,), (1, 2)]:
                        model.addConstrs((q.sum('*', '*', a) >= bounds1[i, 0] for a in away), "LWR_constr-(3,), (1,2)")
                    elif constrList[i] == [(3,), (0, 1, 2)]:
                        model.addConstrs((x.sum('*', '*', '*', a) >= bounds1[i, 0] for a in away),
                                         "LWR_constr-(3,), (0,1,2)")
                    elif constrList[i] == [(0, 1), (2,)]:
                        model.addConstrs((v0.sum(c, d, '*') >= bounds1[i, 0] for c in cycle for d in day),
                                         "LWR_constr-(0,1), (2,)")
                    elif constrList[i] == [(0, 1), (3,)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for h in skill_group1) >= bounds1[i, 0] for c in cycle for d in day),
                            "LWR_constr-(0,1), (3,)")
                    elif constrList[i] == [(0, 1), (2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group1 for a in away) >= bounds1[i, 0] for c in cycle
                             for d
                             in day),
                            "LWR_constr-(0,1), (2,3)")
                    elif constrList[i] == [(0, 2), (1,)]:
                        model.addConstrs((v0.sum(c, '*', a) >= bounds1[i, 0] for c in cycle for a in away),
                                         "LWR_constr-(0,2), (1,)")
                    elif constrList[i] == [(0, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group1) >= bounds1[i, 0] for c in cycle for a in away),
                            "LWR_constr-(0,2), (3,)")
                    elif constrList[i] == [(0, 2), (1, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group1 for d in day) >= bounds1[i, 0] for c in cycle
                             for a in
                             away),
                            "LWR_constr-(0,2), (1,3)")
                    elif constrList[i] == [(0, 3), (1,)]:
                        model.addConstrs((n.sum(c, '*', h) >= bounds1[i, 0] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (1,)")
                    elif constrList[i] == [(0, 3), (2,)]:
                        model.addConstrs((p.sum(c, h, '*') >= bounds1[i, 0] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (2,)")
                    elif constrList[i] == [(0, 3), (1, 2)]:
                        model.addConstrs((x.sum(c, '*', h, '*') >= bounds1[i, 0] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (1,2)")
                    elif constrList[i] == [(1, 2), (0,)]:
                        model.addConstrs((v0.sum('*', d, a) >= bounds1[i, 0] for d in day for a in away),
                                         "LWR_constr-(1,2), (0,)")
                    elif constrList[i] == [(1, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for h in skill_group1) >= bounds1[i, 0] for d in day for a in away),
                            "LWR_constr-(1,2), (3,)")
                    elif constrList[i] == [(1, 2), (0, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group1 for c in cycle) >= bounds1[i, 0] for d in day
                             for a in
                             away),
                            "LWR_constr-(1,2), (0,3)")
                    elif constrList[i] == [(1, 3), (0,)]:
                        model.addConstrs((n.sum('*', d, h) >= bounds1[i, 0] for d in day for h in home),
                                         "LWR_constr-(1,3), (0,)")
                    elif constrList[i] == [(1, 3), (2,)]:
                        model.addConstrs((q.sum(d, '*', h) >= bounds1[i, 0] for d in day for h in home),
                                         "LWR_constr-(1,3), (2,)")
                    elif constrList[i] == [(1, 3), (0, 2)]:
                        model.addConstrs((x.sum('*', d, '*', h) >= bounds1[i, 0] for d in day for h in home),
                                         "LWR_constr-(1,3), (0,2)")
                    elif constrList[i] == [(2, 3), (0,)]:
                        model.addConstrs((p.sum('*', h, a) >= bounds1[i, 0] for h in home for a in away),
                                         "LWR_constr-(2,3), (0,)")
                    elif constrList[i] == [(2, 3), (1,)]:
                        model.addConstrs((q.sum('*', h, a) >= bounds1[i, 0] for h in home for a in away),
                                         "LWR_constr-(2,3), (1,)")
                    elif constrList[i] == [(2, 3), (0, 1)]:
                        model.addConstrs((x.sum('*', '*', h, a) >= bounds1[i, 0] for h in home for a in away),
                                         "LWR_constr-(2,3), (0,1)")
                    elif constrList[i] == [(0, 1, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(x[c, d, a, h] for h in skill_group1) >= bounds1[i, 0] for c in cycle for d in day
                             for a in
                             away),
                            "LWR_constr-(0,1,2), (3,)")
                    elif constrList[i] == [(0, 1, 3), (2,)]:
                        model.addConstrs(
                            (x.sum(c, d, '*', h) >= bounds1[i, 0] for c in cycle for d in day for h in home),
                            "LWR_constr-(0,1,3), (2,)")
                    elif constrList[i] == [(0, 2, 3), (1,)]:
                        model.addConstrs(
                            (x.sum(c, '*', a, h) >= bounds1[i, 0] for c in cycle for a in away for h in home),
                            "LWR_constr-(0,2,3), (1,)")
                    elif constrList[i] == [(1, 2, 3), (0,)]:
                        model.addConstrs(
                            (x.sum('*', d, a, h) >= bounds1[i, 0] for d in day for a in away for h in home),
                            "LWR_constr-(1,2,3), (0,)")
                if bounds1[i, 1] > 0:
                    # this part covers count lowerbound
                    if constrList[i] == [(0,), (1,)]:
                        model.addConstrs((r.sum(c, '*') <= bounds1[i, 1] for c in cycle), "SG0 - LWR_constr-(0,), (1,)")
                    elif constrList[i] == [(0,), (2,)]:
                        model.addConstrs((u.sum(c, '*') <= bounds1[i, 0] for c in cycle), "LWR_constr-(0,), (2,)")
                    elif constrList[i] == [(0,), (3,)]:
                        model.addConstrs((quicksum(s[c, h] for h in skill_group1) <= bounds1[i, 1] for c in cycle),
                                         "LWR_constr-(0,), (3,)")
                    elif constrList[i] == [(0,), (1, 2)]:
                        model.addConstrs((v0.sum(c, '*', '*') <= bounds1[i, 1] for c in cycle),
                                         "LWR_constr-(0,), (1,2)")
                    elif constrList[i] == [(0,), (1, 3)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for h in skill_group1 for d in day) <= bounds1[i, 1] for c in cycle),
                            "LWR_constr-(0,), (1,3)")
                    elif constrList[i] == [(0,), (2, 3)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group1 for a in away) <= bounds1[i, 1] for c in cycle),
                            "LWR_constr-(0,), (2,3)")
                    elif constrList[i] == [(0,), (1, 2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for d in day for a in away for h in skill_group1) <= bounds1[i, 1]
                             for c in cycle),
                            "LWR_constr-(0,), (1,2,3)")
                    elif constrList[i] == [(1,), (0,)]:
                        model.addConstrs((r.sum('*', d) <= bounds1[i, 1] for d in day), "LWR_constr-(1,), (0,)")
                    elif constrList[i] == [(1,), (2,)]:
                        model.addConstrs((v.sum(d, '*') <= bounds1[i, 1] for d in day), "LWR_constr-(1,), (2,)")
                    elif constrList[i] == [(1,), (3,)]:
                        model.addConstrs((quicksum(u[d, h] for h in skill_group1) <= bounds1[i, 1] for d in day),
                                         "LWR_constr-(1,), (3,)")
                    elif constrList[i] == [(1,), (0, 2)]:
                        model.addConstrs((v0.sum('*', d, '*') <= bounds1[i, 1] for d in day), "LWR_constr-(1,), (0,2)")
                    elif constrList[i] == [(1,), (0, 3)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for c in cycle for h in skill_group1) <= bounds1[i, 1] for d in day),
                            "LWR_constr-(1,), (0,3)")
                    elif constrList[i] == [(1,), (2, 3)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for a in away for h in skill_group1) <= bounds1[i, 1] for d in day),
                            "LWR_constr-(1,), (2,3)")
                    elif constrList[i] == [(1,), (0, 2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for c in cycle for a in away for h in skill_group1) <= bounds1[i, 1]
                             for d in day),
                            "LWR_constr-(1,), (0,2,3)")
                    elif constrList[i] == [(2,), (0,)]:
                        model.addConstrs((t.sum('*', a) <= bounds1[i, 1] for a in away), "LWR_constr-(2,), (0,)")
                    elif constrList[i] == [(2,), (1,)]:
                        model.addConstrs((v.sum('*', a) <= bounds1[i, 1] for a in away), "LWR_constr-(2,), (1,)")
                    elif constrList[i] == [(2,), (3,)]:
                        model.addConstrs((quicksum(w[h, a] for h in skill_group1) <= bounds1[i, 1] for a in away),
                                         "LWR_constr--(2,), (3,)")
                    elif constrList[i] == [(2,), (0, 1)]:
                        model.addConstrs((o.sum('*', '*', a) <= bounds1[i, 1] for a in away), "LWR_constr--(2,), (0,1)")
                    elif constrList[i] == [(2,), (0, 3)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group1 for c in cycle) <= bounds1[i, 1] for a in away),
                            "LWR_constr--(2,), (0,3)")
                    elif constrList[i] == [(2,), (1, 3)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for d in day for h in skill_group1) <= bounds1[i, 1] for a in away),
                            "LWR_constr-(2,), (1,3)")
                    elif constrList[i] == [(2,), (0, 1, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for c in cycle for d in day for h in skill_group1) <= bounds1[i, 1]
                             for a in away),
                            "LWR_constr-(2,), (0,1,3)")
                    elif constrList[i] == [(3,), (0,)]:
                        model.addConstrs((s.sum('*', a) <= bounds1[i, 1] for a in away), "LWR_constr-(3,), (0,)")
                    elif constrList[i] == [(3,), (1,)]:
                        model.addConstrs((u.sum('*', a) <= bounds1[i, 1] for a in away), "LWR_constr-(3,), (1,)")
                    elif constrList[i] == [(3,), (2,)]:
                        model.addConstrs((w.sum('*', a) <= bounds1[i, 1] for a in away), "LWR_constr-(3,), (2,)")
                    elif constrList[i] == [(3,), (0, 1)]:
                        model.addConstrs((n.sum('*', '*', a) <= bounds1[i, 1] for a in away), "LWR_constr-(3,), (0,1)")
                    elif constrList[i] == [(3,), (0, 2)]:
                        model.addConstrs((p.sum('*', '*', a) <= bounds1[i, 1] for a in away), "LWR_constr-(3,), (0,2)")
                    elif constrList[i] == [(3,), (1, 2)]:
                        model.addConstrs((q.sum('*', '*', a) <= bounds1[i, 1] for a in away), "LWR_constr-(3,), (1,2)")
                    elif constrList[i] == [(3,), (0, 1, 2)]:
                        model.addConstrs((x.sum('*', '*', '*', a) <= bounds1[i, 1] for a in away),
                                         "LWR_constr-(3,), (0,1,2)")
                    elif constrList[i] == [(0, 1), (2,)]:
                        model.addConstrs((v0.sum(c, d, '*') <= bounds1[i, 1] for c in cycle for d in day),
                                         "LWR_constr-(0,1), (2,)")
                    elif constrList[i] == [(0, 1), (3,)]:
                        model.addConstrs(
                            (quicksum(n[c, d, h] for h in skill_group1) <= bounds1[i, 1] for c in cycle for d in day),
                            "LWR_constr-(0,1), (3,)")
                    elif constrList[i] == [(0, 1), (2, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group1 for a in away) <= bounds1[i, 1] for c in cycle
                             for d in day),
                            "LWR_constr-(0,1), (2,3)")
                    elif constrList[i] == [(0, 2), (1,)]:
                        model.addConstrs((v0.sum(c, '*', a) <= bounds1[i, 1] for c in cycle for a in away),
                                         "LWR_constr-(0,2), (1,)")
                    elif constrList[i] == [(0, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(p[c, h, a] for h in skill_group1) <= bounds1[i, 1] for c in cycle for a in away),
                            "LWR_constr-(0,2), (3,)")
                    elif constrList[i] == [(0, 2), (1, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group1 for d in day) <= bounds1[i, 1] for c in cycle
                             for a in away),
                            "LWR_constr-(0,2), (1,3)")
                    elif constrList[i] == [(0, 3), (1,)]:
                        model.addConstrs((n.sum(c, '*', h) <= bounds1[i, 1] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (1,)")
                    elif constrList[i] == [(0, 3), (2,)]:
                        model.addConstrs((p.sum(c, h, '*') <= bounds1[i, 1] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (2,)")
                    elif constrList[i] == [(0, 3), (1, 2)]:
                        model.addConstrs((x.sum(c, '*', h, '*') <= bounds1[i, 1] for c in cycle for h in home),
                                         "LWR_constr-(0,3), (1,2)")
                    elif constrList[i] == [(1, 2), (0,)]:
                        model.addConstrs((v0.sum('*', d, a) <= bounds1[i, 1] for d in day for a in away),
                                         "LWR_constr-(1,2), (0,)")
                    elif constrList[i] == [(1, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(q[d, h, a] for h in skill_group1) <= bounds1[i, 1] for d in day for a in away),
                            "LWR_constr-(1,2), (3,)")
                    elif constrList[i] == [(1, 2), (0, 3)]:
                        model.addConstrs(
                            (quicksum(x[c, d, h, a] for h in skill_group1 for c in cycle) <= bounds1[i, 1] for d in day
                             for a in away),
                            "LWR_constr-(1,2), (0,3)")
                    elif constrList[i] == [(1, 3), (0,)]:
                        model.addConstrs((n.sum('*', d, h) <= bounds1[i, 1] for d in day for h in home),
                                         "LWR_constr-(1,3), (0,)")
                    elif constrList[i] == [(1, 3), (2,)]:
                        model.addConstrs((q.sum(d, '*', h) <= bounds1[i, 1] for d in day for h in home),
                                         "LWR_constr-(1,3), (2,)")
                    elif constrList[i] == [(1, 3), (0, 2)]:
                        model.addConstrs((x.sum('*', d, '*', h) <= bounds1[i, 1] for d in day for h in home),
                                         "LWR_constr-(1,3), (0,2)")
                    elif constrList[i] == [(2, 3), (0,)]:
                        model.addConstrs((p.sum('*', h, a) <= bounds1[i, 1] for h in home for a in away),
                                         "LWR_constr-(2,3), (0,)")
                    elif constrList[i] == [(2, 3), (1,)]:
                        model.addConstrs((q.sum('*', h, a) <= bounds1[i, 1] for h in home for a in away),
                                         "LWR_constr-(2,3), (1,)")
                    elif constrList[i] == [(2, 3), (0, 1)]:
                        model.addConstrs((x.sum('*', '*', h, a) <= bounds1[i, 1] for h in home for a in away),
                                         "LWR_constr-(2,3), (0,1)")
                    elif constrList[i] == [(0, 1, 2), (3,)]:
                        model.addConstrs(
                            (quicksum(x[c, d, a, h] for h in skill_group1) <= bounds1[i, 1] for c in cycle for d in day
                             for a in away),
                            "LWR_constr-(0,1,2), (3,)")
                    elif constrList[i] == [(0, 1, 3), (2,)]:
                        model.addConstrs(
                            (x.sum(c, d, '*', h) <= bounds1[i, 1] for c in cycle for d in day for h in home),
                            "LWR_constr-(0,1,3), (2,)")
                    elif constrList[i] == [(0, 2, 3), (1,)]:
                        model.addConstrs(
                            (x.sum(c, '*', a, h) <= bounds1[i, 1] for c in cycle for a in away for h in home),
                            "LWR_constr-(0,2,3), (1,)")
                    elif constrList[i] == [(1, 2, 3), (0,)]:
                        model.addConstrs(
                            (x.sum('*', d, a, h) <= bounds1[i, 1] for d in day for a in away for h in home),
                            "LWR_constr-(1,2,3), (0,)")
            '''